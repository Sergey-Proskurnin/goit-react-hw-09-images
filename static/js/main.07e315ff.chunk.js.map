{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","context/context.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/fetchImages.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Searchbar","onSetQuery","searchQuery","onSubmit","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onInput","name","value","autoComplete","autoFocus","placeholder","createContext","ImageGalleryItem","useContext","contextProps","images","onOpenModal","map","id","webformatURL","tags","largeImageURL","onClick","src","alt","data-source","ImageGalleryItemImage","ImageGallery","Button","onLoadMore","Modal","onCloseModal","modalImg","modalAlt","onKeyDown","useCallback","e","key","useEffect","window","addEventListener","removeEventListener","Overlay","fetchImagesWithQuery","searchParam","page","searchParams","URLSearchParams","image_type","orientation","q","per_page","axios","get","LoaderOn","Loader","color","height","width","App","useState","currentPage","isLoading","error","showModal","state","setState","context","Provider","prev","target","dataset","source","attributes","textContent","preventDefault","then","response","data","hits","catch","finally","length","prevState","scrollTo","top","document","querySelector","scrollHeight","behavior","nodeName","body","classList","remove","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.07e315ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1LAAF\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__-J4lR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__ZDGnq\",\"Modal\":\"Modal_Modal__3ifpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3HEMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3tcBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3qkQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__mi2VE\",\"SearchForm\":\"Searchbar_SearchForm__2XL2-\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2Q9NG\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__pltun\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1VQZu\"};","import React from 'react';\nimport s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Searchbar.module.css';\n\nconst Searchbar = ({ onSetQuery, searchQuery, onSubmit }) => {\n  return (\n    <header className={s.Searchbar}>\n      <form onSubmit={onSubmit} className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchFormButton}>\n          <span className={s.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchFormInput}\n          onInput={onSetQuery}\n          name=\"searchQuery\"\n          value={searchQuery}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onSetQuery: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\nexport default Searchbar;\n","import { createContext } from 'react';\n\nexport default createContext();\n","import React, { useContext } from 'react';\n\nimport s from './ImageGalleryItem.module.css';\nimport contextProps from 'context/context';\n\n  \n\nconst ImageGalleryItem = () => {\n  const { images, onOpenModal } = useContext(contextProps)\n \n        return images.map(({ id, webformatURL, tags, largeImageURL }) => (\n          <li key={id} onClick={onOpenModal} className={s.ImageGalleryItem}>\n            <img\n              src={webformatURL}\n              alt={tags}\n              data-source={largeImageURL}\n              className={s.ImageGalleryItemImage}\n            />\n          </li>\n        ));\n      }\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from 'components/ImageGalleryItem';\n\nconst ImageGallery = () => {\n  return (\n    <ul className={s.ImageGallery} id=\"imagesList\">\n      <ImageGalleryItem />\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Button.module.css';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <button onClick={onLoadMore} className={s.Button} type=\"button\">\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\nexport default Button;\n","import React from 'react';\nimport {useEffect, useContext, useCallback } from 'react';\nimport contextProps from 'context/context';\nimport PropTypes from 'prop-types';\n\nimport s from './Modal.module.css';\n\nconst Modal = ({onCloseModal}) => {\n  const { modalImg, modalAlt} = useContext(contextProps)\n\n  const onKeyDown = useCallback(e => {\n    if (e.key === 'Escape') {\n      onCloseModal(e);\n    } }, [onCloseModal])\n\n    useEffect (() => {\n      \n      window.addEventListener('keydown', onKeyDown);\n      return () => { window.removeEventListener('keydown', onKeyDown);\n    }\n  }, [onKeyDown]) \n \n\n  \n    return (\n      <div onClick={onCloseModal} className={s.Overlay}>\n        <div className={s.Modal}>\n          <img src={modalImg} alt={modalAlt} />\n        </div>\n      </div>\n    );\n  }\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func,\n};\nexport default Modal;\n\n// class Modal extends Component {\n//   static propTypes = {\n//     onCloseModal: PropTypes.func.isRequired,\n//     modalImg: PropTypes.string.isRequired,\n//     modalAlt: PropTypes.string.isRequired,\n//   };\n\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.onKeyDown);\n//   }\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.onKeyDown);\n//   }\n\n//   onKeyDown = e => {\n//     if (e.key === 'Escape') {\n//       this.props.onCloseModal(e);\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div onClick={this.props.onCloseModal} className={s.Overlay}>\n//         <div className={s.Modal}>\n//           <img src={this.props.modalImg} alt={this.props.modalAlt} />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// Modal.propTypes = {\n//   onKeyDown: PropTypes.func,\n// };\n// export default Modal;\n","import axios from 'axios';\n\nconst API_KEY = '21195458-19b2d8fc62244b43de198b4d0';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst fetchImagesWithQuery = (searchParam, page) => {\n  const searchParams = new URLSearchParams({\n    image_type: 'photo',\n    orientation: 'horizontal',\n    q: searchParam,\n    page: page,\n    per_page: 12,\n    key: API_KEY,\n  });\n  return axios.get(`${BASE_URL}?${searchParams}`);\n};\n\nexport { fetchImagesWithQuery };\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport s from './Loader.module.css';\n\nconst LoaderOn = () => {\n  return (\n    <div className={s.Loader}>\n      <Loader type=\"Audio\" color=\"#00BFFF\" height={150} width={150} />\n    </div>\n  );\n};\n\nexport default LoaderOn;\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport Container from 'components/Container';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Button from 'components/Button';\nimport Modal from 'components/Modal';\nimport { fetchImagesWithQuery } from 'services/fetchImages';\nimport LoaderOn from 'components/Loader';\nimport contextProps from 'context/context';\n\nconst App = () => {\n  const initialState = {\n    images: [],\n    currentPage: 1,\n    searchQuery: '',\n    isLoading: false,\n    error: null,\n    showModal: false,\n    modalImg: '',\n    modalAlt: '',\n  };\n\n  const [state, setState] = useState(initialState)\n  const { searchQuery, currentPage, images, isLoading, showModal } = state;\n\n  const onOpenModal = e => {\n    setState(prev => ({\n      ...prev,\n      modalImg: e.target.dataset.source,\n      showModal: true,\n      modalAlt: e.target.attributes.alt.textContent,\n    }));\n  }\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setState(prev => ({ ...prev, isLoading: true }));\n    fetchImagesWithQuery(searchQuery, 1)\n      .then(response => setState(prev => ({ ...prev, images: response.data.hits })))\n      .catch(error => setState(prev => ({ ...prev, error })))\n      .finally(() => setState(prev => ({ ...prev, isLoading: false })));\n  };\n\n  const onLoadMore = () => {\n    setState(prev => ({ ...prev, isLoading: true }));\n\n    fetchImagesWithQuery(searchQuery, currentPage + 1)\n      .then(response =>\n        setState(prevState => ({\n          ...prevState,\n          images: [...prevState.images, ...response.data.hits],\n          currentPage: prevState.currentPage + 1,\n        })),\n      )\n      .catch(error => setState(prev => ({ ...prev, error })))\n      .finally(() => {\n        setState(prev => ({ ...prev, isLoading: false }));\n        window.scrollTo({\n          top: document.querySelector('#imagesList').scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  const onCloseModal = e => {\n    if (e.target.nodeName !== 'IMG') {\n      setState(prev => ({ ...prev, showModal: false, modalImg: '', modalAlt: '' }));\n    }\n    document.body.classList.remove('is-open');\n  };\n\n  const onSetQuery = e => {\n    setState(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <contextProps.Provider value={{ ...state, onOpenModal }}>\n      <Container>\n        <Searchbar\n          onSubmit={onSubmit}\n          onSetQuery={onSetQuery}\n          searchQuery={searchQuery}\n        />\n        <ImageGallery />\n        {isLoading && <LoaderOn />}\n        {images.length > 11 && <Button onLoadMore={onLoadMore} />}\n        {showModal && (\n          <Modal\n            onCloseModal={onCloseModal}\n            \n          />\n        )}\n      </Container>\n    </contextProps.Provider>\n  );\n}\n\n\nexport default App;\n\n\n\n// class App extends Component {\n//   static defaultProps = {\n//     images: [],\n//     currentPage: 1,\n//     searchQuery: '',\n//     isLoading: false,\n//     error: null,\n//     showModal: false,\n//     modalImg: '',\n//     modalAlt: '',\n//   };\n//   static propTypes = {\n//     images: PropTypes.array,\n//     currentPage: PropTypes.number,\n//     searchQuery: PropTypes.string,\n//     isLoading: PropTypes.bool,\n//     error: PropTypes.string,\n//     showModal: PropTypes.bool,\n//     modalImg: PropTypes.string,\n//     modalAlt: PropTypes.string,\n//   };\n\n//   state = {\n//     images: this.props.images,\n//     currentPage: this.props.currentPage,\n//     searchQuery: this.props.searchQuery,\n//     isLoading: this.props.isLoading,\n//     error: this.props.error,\n//     showModal: this.props.showModal,\n//     modalImg: this.props.modalImg,\n//     modalAlt: this.props.modalAlt,\n//     onOpenModal: e => {\n//       this.setState({\n//         modalImg: e.target.dataset.source,\n//         showModal: true,\n//         modalAlt: e.target.attributes.alt.textContent,\n//       });\n//       document.body.classList.add('is-open');\n//     },\n//   };\n\n//   onSubmit = e => {\n//     e.preventDefault();\n//     const { searchQuery } = this.state;\n\n//     this.setState({ isLoading: true });\n//     // this.onLoadMore ()\n//     fetchImagesWithQuery(searchQuery, 1)\n//       .then(response => this.setState({ images: response.data.hits }))\n//       .catch(error => this.setState({ error }))\n//       .finally(() => this.setState({ isLoading: false }));\n//   };\n\n//   onLoadMore = () => {\n//     const { searchQuery, currentPage } = this.state;\n\n//     this.setState({ isLoading: true });\n\n//     fetchImagesWithQuery(searchQuery, currentPage + 1)\n//       .then(response =>\n//         this.setState(prevState => ({\n//           images: [...prevState.images, ...response.data.hits],\n//           currentPage: prevState.currentPage + 1,\n//         })),\n//       )\n//       .catch(error => this.setState({ error }))\n//       .finally(() => {\n//         this.setState({ isLoading: false });\n//         window.scrollTo({\n//           top: document.querySelector('#imagesList').scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       });\n//   };\n\n//   onCloseModal = e => {\n//     if (e.target.nodeName !== 'IMG') {\n//       this.setState({ showModal: false, modalImg: '', modalAlt: '' });\n//     }\n//     document.body.classList.remove('is-open');\n//   };\n\n//   onSetQuery = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//       // images: [],\n//       // currentPage: 1,\n//     });\n//   };\n\n//   render() {\n//     const { searchQuery, images, isLoading, showModal, modalImg, modalAlt } =\n//       this.state;\n\n//     return (\n//       <contextProps.Provider value={this.state}>\n//         <Container>\n//           <Searchbar\n//             onSubmit={this.onSubmit}\n//             onSetQuery={this.onSetQuery}\n//             searchQuery={searchQuery}\n//           />\n//           <ImageGallery />\n//           {isLoading && <LoaderOn />}\n//           {images.length > 11 && <Button onLoadMore={this.onLoadMore} />}\n//           {showModal && (\n//             <Modal\n//               onCloseModal={this.onCloseModal}\n//               modalImg={modalImg}\n//               modalAlt={modalAlt}\n//             />\n//           )}\n//         </Container>\n//       </contextProps.Provider>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}